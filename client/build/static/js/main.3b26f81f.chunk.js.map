{"version":3,"sources":["sounds/boop.mp3","TestComponent.js","App.js","reportWebVitals.js","index.js"],"names":["TestComponent","Navbar","fixed","expand","bg","sticky","Form","inline","style","color","TestDataUrl","DefaultHost","url","process","REACT_APP_API_DOMAIN","apiPort","PORT","console","log","ApiURl","App","handleClick","play","state","playSound","setState","initialState","bind","className","type","onClick","this","height","width","timeout","src","boopSfx","autoPlay","path","component","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAAe,MAA0B,iC,uCCkB1BA,MAZf,WACI,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,MAAMC,OAAO,KAAKC,GAAG,OAAOC,OAAO,OAC/C,kBAACC,EAAA,EAAD,CAAMC,QAAM,GACV,wBAAIC,MAAO,CAAEC,MAAO,UAAW,2BAAG,0C,YCe9C,IACMC,EAjBN,WACE,IAEMC,EAAc,mBAEdC,EAAMC,mIAAYC,sBAAwBH,EAC1CI,EAAUF,mIAAYG,MALR,IAMpB,GAAiC,qBAAtBH,mIAAYG,KAAwB,CAC7C,IAAMJ,EAAMD,EAEZ,OADAM,QAAQC,IAAIN,GACLA,EAGT,OADAK,QAAQC,IAAIN,EAAM,IAAMG,GACjBH,EAAM,IAAMG,EAGNI,GACc,QAC7BF,QAAQC,IAAIR,G,IAoCGU,E,kDAjCb,aAAe,IAAD,8BACZ,gBASFC,YAAc,SAACC,GACbL,QAAQC,IAAI,EAAKK,MAAMC,WACvB,EAAKC,SAAS,CAACD,WAAY,EAAKD,MAAMC,YACrC,IAAuB,EAAKD,MAAMC,WAXnC,EAAKE,aAAe,CAClBF,WAAW,GAEb,EAAKD,MAAQ,EAAKG,aAElB,EAAKL,YAAc,EAAKA,YAAYM,KAAjB,gBAPP,E,qDAiBZ,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAAcpB,MAAO,CAAC,gBAAkB,WAAYqB,KAAK,SAASC,QAAUC,KAAKV,aAAnG,QACA,kBAAC,IAAD,CAAQQ,KAAK,QAAQpB,MAAM,UAAUuB,OAAQ,IAAKC,MAAO,IAAKC,QAAS,MACrEH,KAAKR,MAAMC,WAAa,kBAAC,IAAD,CAAkBW,IAAKC,EAASC,UAAQ,IAEpE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWvC,W,GA1BrBwC,IAAMC,WClBTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3b26f81f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/boop.f1badfea.mp3\";","// PlainHeader.js   functional component\nimport React from 'react';\nimport { Navbar } from 'react-bootstrap'; \nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction TestComponent() {\n    return (\n      <div>\n        <Navbar fixed='top' expand='md' bg='info' sticky='top' >\n          <Form inline> \n            <h5 style={{ color: 'black' }}><b><i>Test!</i></b></h5>\n          </Form>\n        </Navbar>\n      </div>\n    );\n}\n\nexport default TestComponent;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport ReactAudioPlayer from 'react-audio-player';\nimport boopSfx from './sounds/boop.mp3';\nimport Loader from 'react-loader-spinner';\nimport TestComponent from './TestComponent';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './App.css';\n\nfunction ApiURl() {\n  const DefaultPort = 5000;\n  //const DefaultPortStr = ':'+DefaultPort.toString();\n  const DefaultHost = 'http://localhost'; // 0.0.0.0'; \n  \n  const url = process.env.REACT_APP_API_DOMAIN || DefaultHost; \n  const apiPort = process.env.PORT || DefaultPort;  \n  if (typeof(process.env.PORT) === 'undefined')  {  \n    const url = DefaultHost;// + DefaultPortStr;  \n    console.log(url);\n    return url;\n  }\n  console.log(url + ':' + apiPort);\n  return url + ':' + apiPort;\n}\n\nconst APIURL = ApiURl();\nconst TestDataUrl = APIURL + '/test'; \nconsole.log(TestDataUrl);\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.initialState = {  \n      playSound: false,\n    };\n    this.state = this.initialState;\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick = (play) => {\n    console.log(this.state.playSound);\n    this.setState({playSound: !this.state.playSound});\n    <ReactAudioPlayer loop={this.state.playSound} />\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <button className='btn-primary' style={{'backgroundColor':'#4ef18f'}} type='button' onClick={ this.handleClick }>Play</button>\n        <Loader type='Rings' color='#00BFFF' height={100} width={100} timeout={2000} />\n        { this.state.playSound && <ReactAudioPlayer src={boopSfx} autoPlay /> }\n\n      <BrowserRouter>\n        <Switch>\n        <Route path='/test' component={TestComponent} />\n        </Switch>\n      </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}